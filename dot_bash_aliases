#!/usr/bin/env bash


### sudo hack: so you can use custom aliases as sudo
###
### NOTE - bash will normally stop recognizing aliases after it sees
### the space after the command sudo, but if it sees an alias that
### ends in a space, it will attempt to detect another alias after.
alias sudo="sudo "

### plz: re-run the last command as root.
alias plz="fc -l -1 | cut -d' ' -f2- | xargs sudo"

### incognito: no saving your command history!
incognito() {
  case $1 in
    start)
    set +o history;;
    stop)
    set -o history;;
    *)
    echo -e "USAGE: incognito start - disable command history.
       incognito stop  - enable command history.";;
  esac
}

### used: recursively gets how much space is used in the current (or given) directory
alias used="du -ch -d 1"

### download: download any and every item linked from that page.
### USAGE - download https://data.gov
alias download="wget --random-wait -r -p --no-parent -e robots=off -U mozilla"

# Move/Delete with interactive confirmation
alias mv='mv -i'
alias rm='rm -i'


# grep for a process
function psg {
  FIRST=`echo $1 | sed -e 's/^\(.\).*/\1/'`
  REST=`echo $1 | sed -e 's/^.\(.*\)/\1/'`
  ps aux | grep "[$FIRST]$REST"
}

# CWD
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
# change directories easily
alias ..2='cd ../..'
alias ..3='cd ../../..'
alias ..4='cd ../../../..'
alias ..5='cd ../../../../..'
alias 1='cd -'
alias 2='cd -2'
alias 3='cd -3'
alias 4='cd -4'
alias 5='cd -5'
alias 6='cd -6'
alias 7='cd -7'
alias 8='cd -8'
alias 9='cd -9'
alias cdr='cd $(pwd -P)'

# File System
alias l='ls -lh'
alias la='ls -lAhrt'
alias lt='ls -lhrt'
alias ll='ls -lh'
alias lsa='ls -lah'
alias md='mkdir -p'
alias fp='readlink -e'
alias vdw="vimdiff -c 'set diffopt+=iwhite'"

# Misc Utility
alias c='clear'
alias cls="clear;ls"
alias calc='bc '
alias gr='grep '
alias cgrep="grep --color=always"
alias highlight='egrep -e ^ -e '
alias clip='xclip -sel clip'
alias ipy=ipython

# Make and change directory at once
alias mkcd='_(){ mkdir -p $1; cd $1; }; _'

# fast find
alias ff='find . -name $1'

#typos
alias sl=ls
alias whic=which
alias v=vi
alias bi=vi

#installed binaries
if type nvim &>/dev/null; then alias vi=nvim; fi

# apt get
#alias apt-get='sudo apt-get'

mkcd() {  mkdir $1; cd $1; }
scd() { cd $(dirname $1); }
unmv() { mv $2 $1; }

function ci() {
  local FILE=$1
  local filename=${FILE%:*}
  local linenumb=${FILE##*:}
  #filename=$(echo $FILE | cut -f1 -d:)
  #linenumb=$(echo $FILE | cut -f2 -d:)
  echo $linenumb
  vi $filename -c :$linenumb
  return ${PIPESTATUS[0]}
}

function extract() {

	if [[ "$#" -lt 1 ]]; then
	  echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
	  return 1 #not enough args
	fi

	if [[ ! -e "$1" ]]; then
	  echo -e "File does not exist!"
	  return 2 # File not found
	fi

	DESTDIR="."

	filename=`basename "$1"`

	case "${filename##*.}" in
	  tar)
		echo -e "Extracting $1 to $DESTDIR: (uncompressed tar)"
		tar xvf "$1" -C "$DESTDIR"
		;;
	  gz)
		echo -e "Extracting $1 to $DESTDIR: (gip compressed tar)"
		tar xvfz "$1" -C "$DESTDIR"
		;;
	  tgz)
		echo -e "Extracting $1 to $DESTDIR: (gip compressed tar)"
		tar xvfz "$1" -C "$DESTDIR"
		;;
	  xz)
		echo -e "Extracting  $1 to $DESTDIR: (gip compressed tar)"
		tar xvf -J "$1" -C "$DESTDIR"
		;;
	  bz2)
		echo -e "Extracting $1 to $DESTDIR: (bzip compressed tar)"
		tar xvfj "$1" -C "$DESTDIR"
		;;
      tbz2)
	  	echo -e "Extracting $1 to $DESTDIR: (tbz2 compressed tar)"
	  	tar xvjf "$1" -C "$DESTDIR"
		;;
	  zip)
		echo -e "Extracting $1 to $DESTDIR: (zipp compressed file)"
		unzip "$1" -d "$DESTDIR"
		;;
	  lzma)
	  	echo -e "Extracting $1 : (lzma compressed file)"
		unlzma "$1"
		;;
	  rar)
		echo -e "Extracting $1 to $DESTDIR: (rar compressed file)"
		unrar x "$1" "$DESTDIR"
		;;
	  7z)
		echo -e  "Extracting $1 to $DESTDIR: (7zip compressed file)"
		7za e "$1" -o "$DESTDIR"
		;;
	  xz)
	  	echo -e  "Extracting $1 : (xz compressed file)"
	    unxz  "$1"
	  	;;
	  exe)
	   	cabextract "$1"
	  	;;
	  *)
		echo -e "Unknown archieve format!"
		return
	  	;;
	esac
}

function repeat() {
    number=$1
    shift
    for n in $(seq $number); do
      "$@" || return $?
    done
}

color() { "$@" 2>&1>&3|sed 's,.*,\x1B[31m&\x1B[0m,'>&2; } 3>&1

# CUDF aliases (for productivity)
alias setcudf="export CUDF_HOME=\`pwd\`"
alias ev="echo \$CUDF_HOME"
alias cdcudf="cd \$CUDF_HOME"
alias cdcpp="cd \$(git rev-parse --show-toplevel)/cpp/build/latest &>/dev/null || cd \$(git rev-parse --show-toplevel)/cpp/build"
#alias cdcpp="cd \$(readlink -e \$CUDF_HOME/cpp/build/latest) &>/dev/null || cd \$CUDF_HOME/cpp/build"
#alias ctagsall="cd \$CUDF_HOME; ctags -R --exclude=python/cudf/cudf/bindings/*.pxd --languages=C,C++,Python .; cd -"
alias b="build-cudf-cpp -n"
alias bp="build-cudf-python"
alias b="pushd _build/release; ninja velox_tpch_benchmark; popd"
alias docrun="docker-compose -f docker-compose.yml  -f ~/docker-compose.override.yml run -e NUM_THREADS=$(nproc) --rm adapters-cuda /bin/bash"

## Custom notifications
alias slacknotify=curl_slack_notify.sh


export PATH="$PATH:$HOME/.local/bin"
if [ -f ~/.bash_paths ]; then
    . ~/.bash_paths
fi

if [ -f ~/.git_aliases ]; then
    . ~/.git_aliases
fi
